@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@using Site.ViewComponents
@model MeasurementDisplayModel<Core.Util.MeasurementLevelEx>
@inject IViewLocalizer Loc

@{
    var uniqueId = Guid.NewGuid().ToString("N");
    var measurement = Model.Measurement;
    var backgroundClass = Model.IsOldMeasurement ? " bg-warning" : "";
}

<div class="@backgroundClass">
    @* <div id="container-@uniqueId" style="height: 100%"></div> *@
    <div id="container-@uniqueId" style="height: 300px;"></div>

    @{
        var levelFraction = measurement.Distance.LevelFraction;
        var realLevelFraction = measurement.Distance.RealLevelFraction;
        var waterL = measurement.Distance.WaterL;
        var height = measurement.Distance.HeightMm;
        var timestamp = measurement.Timestamp;
    }

    @{
        string size = "xx-large";
    }
    @if (waterL.HasValue)
    {
        <div style="font-size: @size">@Math.Round(waterL.Value, 0) @Loc["liter"]</div>
        size = "large";
    }
    @if (realLevelFraction.HasValue)
    {
        <div style="font-size: @size">@Math.Round(realLevelFraction.Value * 100.0, 1)%</div>
        size = "large";
    }
    @if (height.HasValue)
    {
        <div style="font-size: @size">@height.Value @Loc["mm"]</div>
    }
    <div>@timestamp.ToLocalTime().ToString("G")</div>
</div>

@if(levelFraction.HasValue)
{
<script type="text/javascript" src="https://fastly.jsdelivr.net/npm/echarts@5.6.0/dist/echarts.min.js"></script>

<script type="text/javascript">
    var dom = document.getElementById('container-@uniqueId');
    var myChart = echarts.init(dom, null, {
      renderer: 'canvas',
      useDirtyRect: false
    });
    var app = {};
    
    var option;

    option = {
  tooltip: {
    formatter: '{a} <br/>{b} : {c}%'
  },
  series: [
    {
      name: 'Pressure',
      type: 'gauge',
      progress: {
        show: true
      },
      detail: {
        valueAnimation: true,
        formatter: function (value) {
          return value.toFixed(1);
        }
      },
      data: [
        {
          value: @((levelFraction.Value * 100).ToString(CultureInfo.InvariantCulture)),
          name: '%',
          itemStyle: {
            color: '#37addd'
          },

        }
      ]
    }
  ]
};

    if (option && typeof option === 'object') {
      myChart.setOption(option);
    }

    window.addEventListener('resize', myChart.resize);
</script>
}