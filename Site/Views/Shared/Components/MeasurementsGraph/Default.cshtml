@model Site.Pages.MeasurementAggEx[]

@{
    var uniqueId = Guid.NewGuid().ToString("N");
}

<canvas id="my-chart-@uniqueId"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    var ctx = document.getElementById('my-chart-@uniqueId').getContext('2d'); //get the context (canvas)

    var config = {     
        //configure the chart
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Select(m => m.Timestamp.ToLocalTime().ToString("g")))),
            datasets: [
            {
                label: "Min",
                backgroundColor: 'rgba(55, 173, 221,  0.2)',
                borderColor: 'rgba(55, 173, 221, 0.0)',
                fill: false,  //no fill here
                cubicInterpolationMode: 'monotone',
                tension: 0.4,
                data: @Html.Raw(Json.Serialize(Model.Select(m => m.MaxDistance.WaterL)))
            },
            {
                label: "Max",
                backgroundColor: 'rgba(55, 173, 221, 0.2)',
                borderColor: 'rgba(55, 173, 221, 0.0)',
                fill: '-1', //fill until previous dataset
                cubicInterpolationMode: 'monotone',
                tension: 0.4,
                data: @Html.Raw(Json.Serialize(Model.Select(m => m.MinDistance.WaterL)))
            },
            {
                label: "Average",
                borderColor: 'rgba(55, 173, 221, 0.3)',
                fill: false,
                cubicInterpolationMode: 'monotone',
                tension: 0.4,
                data: @Html.Raw(Json.Serialize(Model.Select(m => m.MeanDistance.WaterL)))
            },
            {
                label: "Last",
                borderColor: 'rgba(55, 173, 221, 1.0)',
                fill: false,
                cubicInterpolationMode: 'monotone',
                tension: 0.4,
                data: @Html.Raw(Json.Serialize(Model.Select(m => m.LastDistance.WaterL)))
            }]
        },
        options: {
            maintainAspectRatio: false,
            spanGaps: false,
            elements: {
                line: {
                    tension: 0.000001
                }
            },
            plugins: {
                legend: {
                    display: false
                },
                filler: {
                    propagate: false
                }
            },
            scales: {
                xAxes: [{
                    ticks: {
                        autoSkip: false
                    }
                }]
            }
        }
    };
    var chart = new Chart(ctx, config);        
</script>