@using Microsoft.AspNetCore.Mvc.Localization
@model Site.ViewComponents.MeasurementDetailsModel
@inject IViewLocalizer Loc

@{
    var uniqueId = Guid.NewGuid().ToString("N");
}

<div class="grayout">
    <div>DevEui: @Model.AccountSensor.Sensor.DevEui</div>
    @if (Model.MeasurementEx != null)
    {
        <div>@Loc["Distance"]: @Model.MeasurementEx.Distance.DistanceMm mm</div>
        <div>
            @Loc["RSSI"]: @Model.MeasurementEx.RssiDbm dBm
            - @Math.Round(Model.MeasurementEx.RssiPrc, 0)%
        </div>
        <div>
            @Loc["Battery"]: @Model.MeasurementEx.BatV V
            - @Math.Round(Model.MeasurementEx.BatteryPrc, 0)%
        </div>
    }
    @if (Model.AccountSensor.CapacityL.HasValue)
    {
        <div>@Loc["Capacity"]: @Model.AccountSensor.CapacityL.Value liter</div>
    }
    @if (Model.AccountSensor.ResolutionL.HasValue)
    {
        <div>@Loc["Resolution"]: @Math.Round(Model.AccountSensor.ResolutionL.Value, 2) @Loc["liter (1 mm)"]</div>
    }
    @if (Model.AccountSensor is { DistanceMmFull: not null,DistanceMmEmpty: not null })
    {
        <div>@Loc["Distance Full"]: @Model.AccountSensor.DistanceMmFull.Value mm</div>
        <div>@Loc["Distance Empty"]: @Model.AccountSensor.DistanceMmEmpty.Value mm</div>
    }
</div>