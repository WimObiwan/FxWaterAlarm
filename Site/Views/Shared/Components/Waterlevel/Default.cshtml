@using Microsoft.AspNetCore.Mvc.Localization
@using Site.ViewComponents
@model MeasurementDisplayModel<Core.Util.MeasurementLevelEx>
@inject IViewLocalizer Loc

@{
    var uniqueId = Guid.NewGuid().ToString("N");
    var measurement = Model.Measurement;
    var backgroundClass = Model.IsOldMeasurement ? " bg-warning" : "";
}

<div class="@backgroundClass">
    <div>
        <svg id="fillGauge-@uniqueId" width="200" height="200" onclick=""></svg>
    </div>

    @{
        var levelFraction = measurement.Distance.LevelFraction;
        var realLevelFraction = measurement.Distance.RealLevelFraction;
        var waterL = measurement.Distance.WaterL;
        var height = measurement.Distance.HeightMm;
        var timestamp = measurement.Timestamp;
    }

    @{
        string size = "xx-large";
    }
    @if (waterL.HasValue)
    {
        <div style="font-size: @size">@Math.Round(waterL.Value, 0) @Loc["liter"]</div>
        size = "large";
    }
    @if (realLevelFraction.HasValue)
    {
        <div style="font-size: @size">@Math.Round(realLevelFraction.Value * 100.0, 1)%</div>
        size = "large";
    }
    @if (height.HasValue)
    {
        <div style="font-size: @size">@height.Value @Loc["mm"]</div>
    }
    <div>@timestamp.ToLocalTime().ToString("G")</div>
</div>

<script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="~/js/LiquidFillGauge.js"></script>

@if (levelFraction.HasValue || height.HasValue)
{
    int maxValue;
    double value;
    bool displayPercent;
    if (levelFraction.HasValue)
    {
        value = Math.Round(levelFraction.Value * 100.0);
        maxValue = 100;
        displayPercent = true;
    }
    else
    {
        value = height ?? 100;
        maxValue = height ?? 100;
        displayPercent = false;
    }
    
    <script>
        var config = liquidFillGaugeDefaultSettings();
        
        config.circleColor = "#1ca3ec"
        //config.textColor = "#74ccf4"
        config.textColor = "#74ccf4"
        //config.waveTextColor = "#bbeeff"
        config.waveTextColor = "#000000"
        config.waveColor = "#1ca3ec"
        config.warningThreshold = .4;
        config.waveCount = 4;
        config.waveRiseTime = 60;
        config.waveAnimateTime = 6000;
        config.displayPercent = @(displayPercent ? "true" : "false");
        config.maxValue = @maxValue;
        config.valueCountUp = false;
        config.waveRise = false;
        config.waveAnimate = false;

        var gauge = loadLiquidFillGauge("fillGauge-@uniqueId", @value, config);
    </script>
}