@model Site.Pages.MeasurementEx

<div>
    <div>
        <svg id="fillGauge-@Model.DevEui" width="100%" height="200" onclick=""></svg>
    </div>

    @{
        var realLevelFraction = Model.Distance.RealLevelFraction;
        var waterL = Model.Distance.WaterL;
        var timestamp = Model.Timestamp;
    }

    @if (realLevelFraction.HasValue)
    {
        <div style="font-size: xx-large">@Math.Round(realLevelFraction.Value * 100.0, 1)%</div>
    }
    @if (waterL.HasValue)
    {
        <div style="font-size: xx-large">@Math.Round(waterL.Value, 0) liter</div>
    }
    <div>@timestamp.ToLocalTime().ToString("G")</div>
</div>

<script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="~/js/LiquidFillGauge.js"></script>

@if (Model.Distance.LevelFraction.HasValue)
{
    <script>
        var config = liquidFillGaugeDefaultSettings();
        
        config.circleColor = "#1ca3ec"
        config.textColor = "#74ccf4"
        config.waveTextColor = "#bbeeff"
        config.waveColor = "#1ca3ec"
        config.warningThreshold = .4;
        config.waveCount = 4;
        config.waveRiseTime = 60;
        config.waveAnimateTime = 6000;
        config.displayPercent = true;
        config.maxValue = 100;

        var gauge = loadLiquidFillGauge("fillGauge-@Model.DevEui", @Math.Round(Model.Distance.LevelFraction.Value * 100.0), config);
    </script>
}